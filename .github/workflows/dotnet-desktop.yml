name: .NET Desktop

on:
  push:
    paths: [.github/**, "!.github/**/util_*", OBSNotifier/**, OBSNotifier.sln]
  pull_request:
    paths: [.github/**, "!.github/**/util_*", OBSNotifier/**, OBSNotifier.sln]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Project_Name: OBSNotifier
      Solution_Name: OBSNotifier.sln
      SDK_Name: net8.0-windows

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2

      # Add nuget to cache
      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{runner.os}}-nuget-${{hashFiles('**/*.csproj')}}
          restore-keys: |
            ${{runner.os}}-nuget

      - name: Restore nuget packages
        run: nuget restore ${{env.Solution_Name}}

      - name: Build solution
        shell: powershell
        run: msbuild ${{env.Solution_Name}} /p:Configuration=${{matrix.configuration}} /p:Platform="Any CPU"

      - name: Prepare artifacts
        if: matrix.configuration == 'Release'
        shell: powershell
        run: Remove-Item bin/${{env.Project_Name}}/${{matrix.configuration}}/* -Include *.xml,*.pdb -Force

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.configuration == 'Release' && env.Project_Name || format('{0}_{1}', env.Project_Name, matrix.configuration)}}
          path: bin/${{env.Project_Name}}/${{matrix.configuration}}/${{env.SDK_Name}}

  push_translation:
    name: Update localization sources
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Crowdin Action
        uses: crowdin/github-action@v1
        with:
          upload_sources: true
        env:
          CROWDIN_PROJECT_ID: ${{secrets.CROWDIN_PROJECT_ID}}
          CROWDIN_PERSONAL_TOKEN: ${{secrets.CROWDIN_PERSONAL_TOKEN}}